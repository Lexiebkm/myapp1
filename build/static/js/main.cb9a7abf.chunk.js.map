{"version":3,"sources":["js/components/features/counter/Counter.module.css","js/sidebars.js","js/components/theme-context.js","js/components/datagrid.js","js/components/vischart.js","js/components/visgauges.js","js/components/features/counter/counterSlice.js","js/components/appcounter.js","js/components/features/customer/customerSlice.js","js/components/App.js","js/components/app/store.js","reportWebVitals.js","index.js"],"names":["module","exports","slice","call","document","querySelectorAll","forEach","tooltipTriggerEl","bootstrap","Tooltip","themes","light","foreground","background","dark","primary","ThemeContext","React","createContext","DataGrid","props","useState","rowData","tableRef","useRef","useContext","useEffect","className","id","role","data-bs-toggle","data-bs-target","type","aria-controls","aria-selected","aria-labelledby","tabIndex","style","height","width","field","hide","ref","VisChart","mychart","charttype","setCharttype","chartRef","chartoptions","console","log","chart","plotOptions","bar","horizontal","series","data","x","y","title","text","align","margin","offsetX","offsetY","floating","fontSize","fontWeight","fontFamily","color","labels","dataLabels","enabled","pie","customScale","donut","size","name","xaxis","categories","ApexCharts","current","render","destroy","value","onChange","event","target","checked","window","nodeEnv","autoFocus","required","VisGauge","mygauge","gaugetype","setGaugetype","gaugeRef","handleChange","LinearGauge","renderTo","borderRadius","borders","barStrokeWidth","minorTicks","majorTicks","units","colorValueBoxShadow","colorPlate","colorMajorTicks","colorMinorTicks","colorTitle","colorUnits","colorNumbers","colorNeedle","colorNeedleEnd","valueBox","animationTarget","animationRule","animationDuration","animateOnInit","RadialGauge","minValue","maxValue","strokeTicks","highlights","from","to","borderShadowWidth","draw","data-toggle","data-placement","htmlFor","counterSlice","createSlice","initialState","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","selectCount","counter","AppCounter","customerSlice","changeName","selectCustomer","customer","Komponen","theme","others","useSelector","custname","useDispatch","params","useRouteMatch","useParams","komponenId","Provider","MyCarousel","changeTheme","UnderConstruction","DataVisualization","datavisId","Reports","reportsId","User","match","username","data-bs-ride","data-bs-slide","aria-hidden","Logout","e","info","homepathname","csrftoken","querySelector","content","url","replace","fetch","method","headers","then","result","catch","error","sendDataForLogout","App","setTheme","toggleTheme","aria-expanded","path","component","configureStore","reducer","counterReducer","customerReducer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","store","getElementById"],"mappings":"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","file":"static/js/main.cb9a7abf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Counter_row__2YgVQ\",\"value\":\"Counter_value__1SwO9\",\"button\":\"Counter_button__1En9f\",\"textbox\":\"Counter_textbox__gxqwZ\",\"asyncButton\":\"Counter_asyncButton__9AKLl Counter_button__1En9f\"};","/* global bootstrap: false */\n(function () {\n  'use strict'\n  var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'))\n  tooltipTriggerList.forEach(function (tooltipTriggerEl) {\n    new bootstrap.Tooltip(tooltipTriggerEl)\n  })\n})()\n","import React from \"react\";\r\n\r\nexport const themes = {\r\n  light: {\r\n    foreground: \"#000000\",\r\n    background: \"#eeeeee\"\r\n  },\r\n  dark: {\r\n    foreground: \"#ffffff\",\r\n    background: \"#222222\"\r\n  },\r\n  primary: {\r\n    foreground: \"white\",\r\n    background: \"deepskyblue\"  \t\r\n  }\r\n};\r\n\r\nexport const ThemeContext = React.createContext(themes.light);\r\n\r\n","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport {AgGridColumn, AgGridReact} from 'ag-grid-react';\r\nimport Tabulator from \"tabulator-tables\"; //import Tabulator library\r\nimport {ThemeContext} from \"./theme-context\";\r\n\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\nimport \"tabulator-tables/dist/css/tabulator.min.css\"; //import Tabulator stylesheet\r\n\r\nexport default function DataGrid(props) {\r\n    const [rowData, setRowData] = useState(null);\r\n    const [tableData, setTableData] = useState(null);\r\n    const tableRef = useRef(null);    \r\n    let tabulator = useRef(null);\r\n\r\n    const theme = useContext(ThemeContext);\r\n    \r\n    useEffect(() => {\r\n        /*let url = window.homepathname.replace(\"dashboard\", \"\");\r\n        url += \"supplier\";\r\n        console.log(\"url :\", url);*/\r\n        return;\r\n\r\n        /*\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers:{\r\n                'Content-Type': ['application/json','charset=UTF-8'],\r\n                //'Origin':'http://localhost'\r\n            },\r\n            mode: \"cors\",\r\n            //cache: \"no-cache\",\r\n            //credentials: \"include\"\r\n        })\r\n        .then(result => result.json())\r\n        .then(data => {\r\n            console.log(\"data :\", data);\r\n            setRowData(data);\r\n        })\r\n        .catch(error => console.log(\"Error : \" + error))\r\n        */\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        function createTable(data) {\r\n            tabulator = new Tabulator(tableRef.current, {\r\n              data: data,           //load row data from array\r\n              layout: \"fitColumns\",      //fit columns to width of table\r\n              responsiveLayout: \"hide\",  //hide columns that dont fit on the table\r\n              reactiveData: true, //enable data reactivity          \r\n              tooltips: true,            //show tool tips on cells\r\n              addRowPos: \"top\",          //when adding a new row, add it to the top of the table\r\n              history: true,             //allow undo and redo actions on the table\r\n              pagination: \"local\",       //paginate the data\r\n              paginationSize: 7,         //allow 7 rows per page of data\r\n              movableColumns: true,      //allow column order to be changed\r\n              resizableRows: true,       //allow row order to be changed\r\n              /*initialSort: [             //set the initial sort order of the data\r\n                  {column:\"name\", dir:\"asc\"},\r\n              ],*/\r\n              //columns: columns,\r\n              autoColumns: true\r\n          });\r\n        }\r\n\r\n        /*let url = window.homepathname.replace(\"dashboard\", \"\");\r\n        url += \"pegawai/tahun/98445373546168325\";\r\n        */\r\n\r\n        return;\r\n\r\n        /*\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers:{\r\n                'Content-Type': ['application/json','charset=UTF-8'],\r\n                //'Origin':'http://localhost'\r\n            },\r\n            mode: \"cors\",\r\n            //cache: \"no-cache\",\r\n            //credentials: \"include\"\r\n        })\r\n        .then(result => result.json())\r\n        .then(data => {\r\n            console.log(\"data :\", data);\r\n            setTableData(data);\r\n            createTable(data);\r\n            //tabulator.setData(data);\r\n        })\r\n        .catch(error => console.log(\"Error : \" + error))\r\n\r\n        //console.log(\"MyDataGrid :\", MyDataGrid);\r\n        console.log(\"tableRef.current :\", tableRef.current);\r\n        */        \r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"divblock\">\r\n            <div className=\"row mt-3 mb-3\">\r\n                <label className=\"col-sm ml-5\">Data Grid Using Various 3rd Party Libraries</label>\r\n            </div>\r\n\r\n            <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\r\n            <li className=\"nav-item\" role=\"presentation\">\r\n                <button className=\"nav-link active\" id=\"home-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#myaggrid\" type=\"button\" role=\"tab\" aria-controls=\"myaggrid\" aria-selected=\"true\">ag-Grid</button>\r\n            </li>\r\n            <li className=\"nav-item\" role=\"presentation\">\r\n                <button className=\"nav-link\" id=\"profile-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#mytabulator\" type=\"button\" role=\"tab\" aria-controls=\"mytabulator\" aria-selected=\"false\">Tabulator</button>\r\n            </li>\r\n            {/*\r\n            <li className=\"nav-item\" role=\"presentation\">\r\n                <button className=\"nav-link\" id=\"contact-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#mycontact\" type=\"button\" role=\"tab\" aria-controls=\"mycontact\" aria-selected=\"false\">Contact</button>\r\n            </li>\r\n            <li className=\"nav-item\" role=\"presentation\">\r\n                <button className=\"nav-link\" id=\"disabled-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#mydisabled\" type=\"button\" role=\"tab\" aria-controls=\"mydisabled\" aria-selected=\"false\" disabled>Disabled</button>\r\n            </li>\r\n            */}\r\n            </ul>\r\n            <div className=\"tab-content\" id=\"myTabContent\">\r\n                <div className=\"tab-pane fade show active\" id=\"myaggrid\" role=\"tabpanel\" aria-labelledby=\"myaggrid\" tabIndex=\"0\">\r\n                    <div className=\"row mt-2 mb-2 ml-5\">\r\n                        <label className=\"col-sm\">Supplier Data</label>\r\n                    </div>\r\n                    <div className=\"ag-theme-alpine ml-5\" style={{height: 400, width: 1000}}>\r\n                        <AgGridReact\r\n                            rowData={rowData}>\r\n                            <AgGridColumn field=\"supplierid\" hide={false}></AgGridColumn>\r\n                            <AgGridColumn field=\"namasupplier\"></AgGridColumn>\r\n                            <AgGridColumn field=\"status\"></AgGridColumn>\r\n                        </AgGridReact>\r\n                    </div>\r\n                </div>\r\n                <div className=\"tab-pane fade\" id=\"mytabulator\" role=\"tabpanel\" aria-labelledby=\"mytabulator\" tabIndex=\"1\">\r\n                    <div className=\"row mt-2 mb-2 ml-5\">\r\n                        <label className=\"col-sm ml-5\">Data Pegawai</label>\r\n                    </div>\r\n                    <div ref={tableRef} className=\"ml-2\"></div>\r\n                </div>\r\n                <div className=\"tab-pane fade\" id=\"mycontact\" role=\"tabpanel\" aria-labelledby=\"mycontact\" tabIndex=\"2\">\r\n                    <label>This is for contact data</label>\r\n                </div>\r\n                <div className=\"tab-pane fade\" id=\"mydisabled\" role=\"tabpanel\" aria-labelledby=\"mydisabled\" tabIndex=\"3\">\r\n                    <label>This is disabled</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import React, { useState, useEffect, useRef, useContext } from 'react';\r\n//import Chart from 'chart.js';\r\nimport ApexCharts from 'apexcharts'\r\n\r\nimport {ThemeContext} from \"./theme-context\";\r\n\r\nexport default function VisChart(props) {\r\n    const [charttype, setCharttype] = useState(\"line\");\r\n    const chartRef = useRef(null);    \r\n    const theme = useContext(ThemeContext);\r\n\r\n    let mychart;\r\n    let chartlib = \"apex\";\r\n    let chartoptions = null;\r\n\r\n    useEffect(() => {\r\n        console.log(\"charttype :\", charttype)\r\n\r\n        switch (chartlib) {            \r\n            case \"chartjs\":\r\n                //const ctx = document.getElementById('myChart');\r\n\r\n                /*\r\n                new Chart(chartRef, {\r\n                type: 'bar',\r\n                data: {\r\n                    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\r\n                    datasets: [{\r\n                    label: '# of Votes',\r\n                    data: [12, 19, 3, 5, 2, 3],\r\n                    borderWidth: 1\r\n                    }]\r\n                },\r\n                options: {\r\n                    scales: {\r\n                    y: {\r\n                        beginAtZero: true\r\n                    }\r\n                    }\r\n                }\r\n                });*/\r\n\r\n                /*\r\n                if (mychart !== null) {\r\n                    mychart.destroy()\r\n                }\r\n                mychart = new Chart(chartRef, {\r\n                    type: 'bar',\r\n                    data: {\r\n                        labels: this.chartLabels,\r\n                        datasets: [{\r\n                            label: 'Target',\r\n                            data: this.targetData,\r\n                            borderWidth: 1,\r\n                            bevelWidth: 3,\r\n                            //bevelHighlightColor: 'rgba(255, 255, 255, 0.75)',\r\n                            //bevelShadowColor: 'rgba(0, 0, 0, 0.5)',\r\n                            backgroundColor: this.targetchartPatterns\r\n                        },{\r\n                            label: 'Realisasi',\r\n                            data: this.realData,\r\n                            borderWidth: 1,\r\n                            bevelWidth: 3,\r\n                            bevelHighlightColor: 'rgba(255, 255, 255, 0.75)',\r\n                            bevelShadowColor: 'rgba(0, 0, 0, 0.5)',\r\n                            backgroundColor: this.realchartPatterns\r\n                        }]\r\n                    },\r\n            \r\n                    options: {\r\n                        title: {\r\n                            display: true,\r\n                            text: \"Grafik Perbandingan Target dan Realisasi\"\r\n                        },                \r\n                        scales: {\r\n                            yAxes: [{\r\n                                scaleLabel : {\r\n                                    display: true,\r\n                                    labelString: \"Target dan Realisasi\",\r\n                                    fontColor: \"cornflowerblue\" ,\r\n                                    fontStyle: \"bold\"\r\n                                },\r\n                                ticks: {\r\n                                    beginAtZero: true\r\n                                }\r\n                            }]\r\n                        },\r\n                        plugins: {\r\n                            colorschemes: {\r\n                                scheme: 'tableau.Tableau20' //tableau.Tableau10, tableau.MillerStone11, tableau.SuperfishelStone10\r\n                            }\r\n                        },\r\n                        tooplips: {\r\n                            bevelWidth: 3,\r\n                            bevelHighlightColor: 'rgba(255, 255, 255, 0.75)',\r\n                            bevelShadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            \r\n                        },\r\n                        legend: {\r\n                            position: \"right\",\r\n                            labels: {\r\n                                fontColor: 'cornflowerblue'\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n                */\r\n                break;\r\n\r\n            case \"apex\":\r\n            default:\r\n                switch (charttype) {\r\n                    case \"bar\":\r\n                        chartoptions = {\r\n                            chart: {\r\n                              type: 'bar'\r\n                            },\r\n                            plotOptions: {\r\n                              bar: {\r\n                                horizontal: false\r\n                              }\r\n                            },\r\n                            series: [{\r\n                              data: [{\r\n                                x: 'Front-End',\r\n                                y: 55\r\n                              }, {\r\n                                x: 'Back-End',\r\n                                y: 35\r\n                              }, {\r\n                                x: 'Full-Stack',\r\n                                y: 10\r\n                              }]\r\n                            }],\r\n                            title: {\r\n                                text: \"Web Developer Composition\",\r\n                                align: 'left',\r\n                                margin: 10,\r\n                                offsetX: 0,\r\n                                offsetY: 0,\r\n                                floating: false,\r\n                                style: {\r\n                                  fontSize:  '14px',\r\n                                  fontWeight:  'bold',\r\n                                  fontFamily: 'Helvetica, Arial, sans-serif',\r\n                                  color: \"rebeccapurple\"\r\n                                },\r\n                            }                            \r\n                          };                          \r\n                          break;\r\n                    \r\n                    case \"pie\":\r\n                        chartoptions = {\r\n                            chart: {\r\n                                type: 'donut' // pie\r\n                            },\r\n                            series: [30, 20, 15, 20, 5, 5, 5],\r\n                            labels: ['Java', 'C#', 'Go', 'PHP', \"Python\", \"Rust\", \"Javascript\"],\r\n                            dataLabels: {\r\n                                enabled: true,\r\n                                style: {\r\n                                    fontSize: '25px',\r\n                                    fontFamily: 'Helvetica, Arial, sans-serif',\r\n                                    fontWeight: 'bold',\r\n                                },\r\n                            },                            \r\n                            plotOptions: {\r\n                                pie: {\r\n                                    //size: 70,\r\n                                    customScale: 0.7,\r\n                                    donut: {\r\n                                        size: '50%'\r\n                                    }\r\n                                }\r\n                            }                            \r\n                        }\r\n                        break;\r\n                    \r\n                    case \"line\":\r\n                    default:                    \r\n                        chartoptions = {\r\n                            chart: {\r\n                            type: 'line'\r\n                            },\r\n                            series: [{\r\n                            name: 'sales',\r\n                            data: [15, 20, 25, 30, 30, 37, 40, 60, 75, 85, 88, 120]\r\n                            }],\r\n                            xaxis: {\r\n                            categories: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n                                \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n                            }\r\n                        }\r\n                        break;\r\n                }\r\n        \r\n                mychart = new ApexCharts(chartRef.current, chartoptions);\r\n                console.log(mychart);\r\n                mychart.render();\r\n                break;            \r\n        }\r\n\r\n        return () => {\r\n            if (mychart !== null) {\r\n                mychart.destroy();\r\n            }    \r\n        }\r\n    }, [charttype])\r\n\r\n    function handleChange(event) {\r\n        const target = event.target\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n    \r\n        if (window.nodeEnv === \"development\") {\r\n            console.log(\"event :\", event, target, name, value)        \r\n        }\r\n        setCharttype(value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"divblock\">\r\n            <div className=\"form-group row mb-0\">\r\n                <label className=\"col-sm-2 col-form-label-sm ml-3\">Chart Type</label>\r\n                <div className=\"col-sm-2\">\r\n                    <select className=\"form-control col-form-label-sm\" \r\n                        id=\"charttype\" name=\"charttype\"\r\n                        value={charttype}\r\n                        onChange={handleChange}\r\n                        autoFocus\r\n                        required>\r\n                        <option key=\"1\" value=\"bar\">Bar</option>\r\n                        <option key=\"2\" value=\"line\">Line</option>\r\n                        <option key=\"3\" value=\"pie\">Pie</option>\r\n                    </select>\r\n                </div>\r\n                <div ref={chartRef} className=\"mt-3\" style={{width: \"800px\", height:\"200px\"}}></div>                                    \r\n            </div>\r\n        </div>\r\n    );\r\n};","import React, { useState, useEffect, useRef, useContext } from 'react';\r\nimport {LinearGauge, RadialGauge} from \"canvas-gauges\"\r\n\r\nimport {ThemeContext} from \"./theme-context\";\r\n\r\nexport default function VisGauge(props) {\r\n    const [gaugetype, setGaugetype] = useState(\"linear\");\r\n    const gaugeRef = useRef(null);\r\n    let mygauge;\r\n\r\n    const theme = useContext(ThemeContext);\r\n    \r\n    useEffect(() => {\r\n        console.log(gaugeRef.current);\r\n\r\n        if (gaugetype === \"linear\") {\r\n            mygauge = new LinearGauge({\r\n                renderTo: gaugeRef.current,\r\n                width: 160,\r\n                height: 600,\r\n                borderRadius: 20,\r\n                borders: 0,\r\n                barStrokeWidth: 20,\r\n                minorTicks: 10,\r\n                majorTicks: [0,10,20,30,40,50,60,70,80,90,100],\r\n                value: 22.3,\r\n                units: \"°C\",\r\n                colorValueBoxShadow: false,\r\n                colorPlate: \"dodgerblue\",//darkgoldenrod, burlywood , #808080 \"#f0fff0\",//honeydew, #fafad2 = lightgoldenrodyellow, #222 = default,\r\n                colorMajorTicks: '#f5f5f5',\r\n                colorMinorTicks: '#ddd',\r\n                colorTitle: '#fff',\r\n                colorUnits: '#ccc',\r\n                colorNumbers: 'white',\r\n                //colorNumbers: 'black',\r\n                colorNeedle: 'rgba(240, 128, 128, 1)',\r\n                colorNeedleEnd: 'rgba(255, 160, 122, .9)',\r\n                valueBox: true,\r\n                animationTarget: \"needle\",\r\n                animationRule: 'cycle',\r\n                animationDuration: 1000,\r\n                animateOnInit: true,\r\n                borders: false,\r\n                borderShadowWidth: 0\r\n\r\n            });\r\n        } else {\r\n            mygauge = new RadialGauge({\r\n                renderTo: gaugeRef.current,\r\n                width: 400,\r\n                height: 400,\r\n                units: 'Km/h',\r\n                title: false,\r\n                value: 85,\r\n                minValue: 0,\r\n                maxValue: 220,\r\n                majorTicks: [\r\n                    '0','20','40','60','80','100','120','140','160','180','200','220'\r\n                ],\r\n                minorTicks: 2,\r\n                strokeTicks: false,\r\n                /*highlights: [\r\n                    { from: 0, to: 50, color: 'rgba(0,255,0,.15)' },\r\n                    { from: 50, to: 100, color: 'rgba(255,255,0,.15)' },\r\n                    { from: 100, to: 150, color: 'rgba(255,30,0,.25)' },\r\n                    { from: 150, to: 200, color: 'rgba(255,0,225,.25)' },\r\n                    { from: 200, to: 220, color: 'rgba(0,0,255,.25)' }\r\n                ],*/\r\n                highlights: [\r\n                    { from: 0, to: 50, color: '#ff0000' },\r\n                    { from: 50, to: 100, color: '#c0c0c0' },\r\n                    { from: 100, to: 150, color: '#ffff00' },\r\n                    { from: 150, to: 200, color: '#008000' },\r\n                    { from: 200, to: 220, color: '#0000ff' }\r\n                ],\r\n                colorPlate: \"dodgerblue\",//darkgoldenrod, burlywood , #808080 \"#f0fff0\",//honeydew, #fafad2 = lightgoldenrodyellow, #222 = default,\r\n                colorMajorTicks: '#f5f5f5',\r\n                colorMinorTicks: '#ddd',\r\n                colorTitle: '#fff',\r\n                colorUnits: '#ccc',\r\n                colorNumbers: 'white',\r\n                //colorNumbers: 'black',\r\n                colorNeedle: 'rgba(240, 128, 128, 1)',\r\n                colorNeedleEnd: 'rgba(255, 160, 122, .9)',\r\n                valueBox: true,\r\n                animationTarget: \"needle\",\r\n                animationRule: 'cycle',\r\n                animationDuration: 1000,\r\n                animateOnInit: true,\r\n                borders: false,\r\n                borderShadowWidth: 0\r\n                /*\r\n                colorPlate: '#222',\r\n                colorMajorTicks: '#f5f5f5',\r\n                colorMinorTicks: '#ddd',\r\n                colorTitle: '#fff',\r\n                colorUnits: '#ccc',\r\n                colorNumbers: '#eee',\r\n                colorNeedle: 'rgba(240, 128, 128, 1)',\r\n                colorNeedleEnd: 'rgba(255, 160, 122, .9)',\r\n                valueBox: true,\r\n                animationRule: 'bounce',\r\n                animationDuration: 500\r\n                */\r\n            });\r\n        }\r\n  \r\n        mygauge.draw();\r\n    }, [gaugetype])\r\n\r\n\r\n    function handleChange(event) {\r\n        const target = event.target\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n    \r\n        if (window.nodeEnv === \"development\") {\r\n            console.log(\"event :\", event, target, name, value)        \r\n        }\r\n        setGaugetype(value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"divblock\">\r\n            <div className=\"form-check form-check-inline mt-3 mb-3\">\r\n                <input type=\"radio\" id=\"lineargauge\" name=\"gaugetype\" className=\"form-check-input\" \r\n                    value=\"linear\"\r\n                    checked={gaugetype === \"linear\"}\r\n                    onChange={handleChange}                                                        \r\n                />\r\n                <label className=\"form-check-label\" \r\n                    title=\"Linear gauge\"\r\n                    data-toggle=\"tooltip\" data-placement=\"right\"\r\n                    htmlFor=\"lineargauge\"\r\n                >Linear</label>\r\n\r\n            </div>\r\n            <div className=\"form-check form-check-inline\">\r\n                <input type=\"radio\" id=\"radialgauge\" name=\"gaugetype\" \r\n                    className=\"form-check-input\" \r\n                    value=\"radial\"\r\n                    checked={gaugetype === \"radial\"}\r\n                    onChange={handleChange}                                                        \r\n                />\r\n                <label className=\"form-check-label\" htmlFor=\"radialgauge\">Radial</label>\r\n\r\n            </div>\r\n\r\n            <div className=\"\">\r\n                <canvas ref={gaugeRef} className=\"pl-10\"></canvas>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import { createSlice } from '@reduxjs/toolkit'\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    value: 0,\n  },\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1\n    },\n    decrement: (state) => {\n      state.value -= 1\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload\n    },\n  },\n})\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\nexport const incrementAsync = (amount) => (dispatch) => {\n  setTimeout(() => {\n    dispatch(incrementByAmount(amount))\n  }, 1000)\n}\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value\n\nexport default counterSlice.reducer\n","import React from 'react';\n//import logo from './logo.svg';\nimport { Counter } from './features/counter/Counter';\nimport './App.css';\n\nfunction AppCounter() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/*<img src={logo} className=\"App-logo\" alt=\"logo\" />*/}\n        <Counter />\n        <span></span>\n      </header>\n    </div>\n  );\n}\n\nexport default AppCounter;\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const customerSlice = createSlice({\r\n  name: 'customer',\r\n  initialState: {\r\n    value: \"Mobile Oil\",\r\n  },\r\n  reducers: {\r\n    changeName: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n})\r\n\r\nexport const {changeName} = customerSlice.actions\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.customer.value)`\r\nexport const selectCustomer = (state) => state.customer.value\r\n\r\nexport default customerSlice.reducer\r\n","import {useState, useEffect, useCallback, useMemo} from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams,\n  //useResolvedPath\n} from \"react-router-dom\";\n\nimport { useSelector, useDispatch } from 'react-redux';\n\n//import logo from './logo.svg';\nimport './App.css';\nimport bootstrap from 'bootstrap'\n\nimport {ThemeContext, themes} from \"./theme-context\";\nimport DataGrid from \"./datagrid\";\nimport VisChart from \"./vischart\";\nimport VisGauge from \"./visgauges\";\nimport DisplayUser from \"./displayuser\";\nimport AppCounter from \"./appcounter\";\n\nimport {\n  decrement,\n  increment,\n  incrementByAmount,\n  incrementAsync,\n  selectCount,\n} from './features/counter/counterSlice';\n\nimport {\n  changeName,\n  selectCustomer\n} from './features/customer/customerSlice';\n\nimport \"./../sidebars\";\n\nimport \"./../../css/sidebars.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport styles from './features/counter/Counter.module.css';\nimport \"./../../css/mycustcolor.css\";\n\n// import bootstrap from 'bootstrap' will load all of Bootstrap’s plugins onto a bootstrap object. \n// The bootstrap module itself exports all of our plugins. \n// You can manually load Bootstrap’s plugins individually by loading the /js/dist/*.js files under the package’s top-level directory.\n\nfunction App0() {\n  const [theme, setTheme] = useState(themes.light)\n\n  return <DataGrid />\n}\n\nfunction App() {\n  const [theme, setTheme] = useState(themes.light)\n\n  function toggleTheme () {\n      setTheme(theme === themes.light ? themes.primary : themes.light);\n      console.log(\"current theme :\", theme);\n  }\n\n  return (\n      <Router>\n      <main>\n          <h1 className=\"visually-hidden\">Sidebars examples</h1>\n\n          <div className=\"flex-shrink-0 p-3 bg-white\" style={{width: \"280px\"}}>\n              <Link to=\"/\" className=\"d-flex align-items-center pb-3 mb-3 link-dark text-decoration-none border-bottom\">              \n              <span className=\"fs-5 fw-semibold\">My Application</span>\n            </Link>\n            <ul className=\"list-unstyled ps-0\">\n              <li className=\"mb-1\">\n                <button className=\"btn btn-toggle align-items-center rounded collapsed\" data-bs-toggle=\"collapse\" data-bs-target=\"#home-collapse\" aria-expanded=\"true\">\n                  Component\n                </button>\n                <div className=\"collapse show\" id=\"home-collapse\">\n                  <ul className=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                    <li><Link to=\"/komponen/modals\" className=\"link-dark rounded\">Modals</Link></li>\n                    <li><Link to=\"/komponen/carousel\" className=\"link-dark rounded\">Carousel</Link></li>\n                    <li><Link to=\"/komponen/combo\" className=\"link-dark rounded\">Combination</Link></li>\n                  </ul>\n                </div>\n              </li>\n              <li className=\"mb-1\">\n                <button className=\"btn btn-toggle align-items-center rounded collapsed\" data-bs-toggle=\"collapse\" data-bs-target=\"#dashboard-collapse\" aria-expanded=\"false\">\n                  Data Visualization\n                </button>\n                <div className=\"collapse\" id=\"dashboard-collapse\">\n                  <ul className=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                    <li><Link to=\"/datavis/datagrid\" className=\"link-dark rounded\">Data Grid</Link></li>\n                    <li><Link to=\"/datavis/datacharts\" className=\"link-dark rounded\">Charts</Link></li>\n                    <li><Link to=\"/datavis/datagauges\" className=\"link-dark rounded\">Gauges</Link></li>\n                  </ul>\n                </div>\n              </li>\n              <li className=\"mb-1\">\n                <button className=\"btn btn-toggle align-items-center rounded collapsed\" data-bs-toggle=\"collapse\" data-bs-target=\"#orders-collapse\" aria-expanded=\"false\">\n                  Reports\n                </button>\n                <div className=\"collapse\" id=\"orders-collapse\">\n                  <ul className=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                    <li><Link to=\"/reports/reduxcounter\" className=\"link-dark rounded\">Reports</Link></li>\n                    <li><Link to=\"/reports/reduxcounter\" className=\"link-dark rounded\">Counter</Link></li>\n                  </ul>\n                </div>\n              </li>\n              <li className=\"border-top my-3\"></li>\n              <li className=\"mb-1\">\n                <button className=\"btn btn-toggle align-items-center rounded collapsed\" data-bs-toggle=\"collapse\" data-bs-target=\"#account-collapse\" aria-expanded=\"false\">\n                  Utility\n                </button>\n                <div className=\"collapse\" id=\"account-collapse\">\n                  <ul className=\"btn-toggle-nav list-unstyled fw-normal pb-1 small\">\n                    <li><Link to=\"/utility/profile\" className=\"link-dark rounded\">Profile</Link></li>\n                    <li><Link to=\"/utility/settings\" className=\"link-dark rounded\">Settings</Link></li>\n                    <li><Link to=\"/utility/logout\" className=\"link-dark rounded\">Log Out</Link></li>\n                  </ul>\n                </div>\n              </li>\n            </ul>\n          </div>\n\n          <div className=\"b-example-divider\"></div>\n\n          <Switch>\n            <Route path=\"/komponen/:komponenId\">\n              <Komponen theme={theme} changeTheme={toggleTheme} />\n              {/*<Komponen prop1={theme} prop2={toggleTheme} prop3=\"this is prop 3\"/>*/}\n            </Route>      \n\n            <Route path=\"/datavis/:datavisId\">\n              <DataVisualization theme={theme} changeTheme={toggleTheme} />\n            </Route>      \n\n            <Route path=\"/reports/:reportsId\">\n              <Reports theme={theme} changeTheme={toggleTheme} />\n            </Route>\n\n            <Route path=\"/user/:username\" component={User} />\n            <Route path=\"/logout\" component={Logout} />\n            \n            <Route path=\"/\">\n              <UnderConstruction />\n            </Route>\n          </Switch>\n      </main>\n      </Router>\n  );\n}\n\nfunction Komponen(props) {\n    const {theme, ...others} = props;\n    console.log(theme);\n    console.log(others);\n\n    const count = useSelector(selectCount);\n    const custname = useSelector(selectCustomer);\n    const dispatch = useDispatch();\n    const [customername, setCustomername] = useState(custname);\n\n    //let resolvedpath = useResolvedPath();\n    let matchedroute = useRouteMatch();\n    let params = useParams();\n    let { komponenId } = useParams();\n    console.log(\"params :\", params)\n\n    switch (komponenId) {      \n        case \"carousel\":\n          return (\n            <ThemeContext.Provider value={props.theme}>\n              <MyCarousel changeTheme={props.changeTheme} />\n            </ThemeContext.Provider>\n          )\n\n        case \"modals\":\n        case \"combo\":\n        case \"reduxcounter\":\n        case \"medicine\":\n        case \"baranglain\":\n        case \"penyakit\":\n        default:\n            return <UnderConstruction />;\n\n            /*\n            return (\n              <div>\n                <h5>Master Data ID: {komponenId}</h5>\n                <h6>Customer : {custname}</h6>\n                <span className={styles.value}>{count}</span>\n                <div className={styles.row}>\n                  <input\n                    value={customername}\n                    onChange={e => setCustomername(e.target.value)}\n                  />\n                  <button\n                    onClick={() => dispatch(changeName(customername))}\n                  >\n                  Change Customer Name\n                </button>\n                </div>            \n              </div>\n            );\n            */\n\n            /*\n            return (\n              <ThemeContext.Provider value={props.theme}>\n                <AppCounter changeTheme={props.changeTheme} />\n              </ThemeContext.Provider>\n            )\n            */\n\n            /*\n            return (\n                <ThemeContext.Provider value={props.theme}>\n                  <GetGeneral changeTheme={props.changeTheme} \n                    matchedroute={matchedroute} \n                    routeid={komponenId}\n                    custname={custname} />\n                </ThemeContext.Provider>\n            )*/\n    }\n}\n\n\nfunction DataVisualization(props) {\n    let params = useParams();\n    let { datavisId } = useParams();\n    console.log(\"params :\", params)\n\n    switch (datavisId) {      \n      case \"datagrid\":\n        return (\n          <ThemeContext.Provider value={props.theme}>\n            <DataGrid changeTheme={props.changeTheme} />\n          </ThemeContext.Provider>\n        )  \n\n      case \"datacharts\":\n          return <VisChart />;\n          \n      case \"datagauges\":\n          return <VisGauge />\n          \n      default:\n          return <UnderConstruction />;\n          /*return <h4>Modul Dokter ID: {datavisId}</h4>;*/\n  }\n}\n\nfunction Reports(props) {\n    let params = useParams();\n    let { reportsId } = useParams();\n    console.log(\"params :\", params)\n\n    switch (reportsId) {      \n        case \"jadwal\":\n        default:\n            return <UnderConstruction />;          \n            /*return <h4>Modul Dokter ID: {reportsId}</h4>;*/\n    }\n}\n\nfunction User(props) {\n  return <h1>Hello {props.match.params.username}!</h1>;\n}\nfunction Home() {\n  return <h4 className=\"text-info mt-2 ml-2\">My Home</h4>;\n}\n\nfunction MyCarousel(props) {\n  return (\n    <div id=\"carouselExample\" className=\"carousel slide\" data-bs-ride=\"carousel\">\n      <div className=\"carousel-inner\">\n        <div className=\"carousel-item active\">\n          <h2>Slide 1</h2>\n          <article>\n            <h2>First article</h2>\n\n            <p>Tacos actually microdosing, pour-over semiotics banjo chicharrones retro fanny pack portland everyday carry vinyl typewriter. Tacos PBR&B pork belly, everyday carry ennui pickled sriracha normcore hashtag polaroid single-origin coffee cold-pressed. PBR&B tattooed trust fund twee, leggings salvia iPhone photo booth health goth gastropub hammock.</p>\n          </article>          \n        </div>\n        <div className=\"carousel-item\">\n          <h2>Slide 2</h2>\n          <article>\n            <h2>Second article</h2>\n\n            <p>Tacos actually microdosing, pour-over semiotics banjo chicharrones retro fanny pack portland everyday carry vinyl typewriter. Tacos PBR&B pork belly, everyday carry ennui pickled sriracha normcore hashtag polaroid single-origin coffee cold-pressed. PBR&B tattooed trust fund twee, leggings salvia iPhone photo booth health goth gastropub hammock.</p>\n          </article>\n        </div>\n        <div className=\"carousel-item\">\n          <h2>Slide 3</h2>\n          <article>\n            <h2>Third article</h2>\n\n            <p>Tacos actually microdosing, pour-over semiotics banjo chicharrones retro fanny pack portland everyday carry vinyl typewriter. Tacos PBR&B pork belly, everyday carry ennui pickled sriracha normcore hashtag polaroid single-origin coffee cold-pressed. PBR&B tattooed trust fund twee, leggings salvia iPhone photo booth health goth gastropub hammock.</p>\n\n            <p>Cray food truck brunch, XOXO +1 keffiyeh pickled chambray waistcoat ennui. Organic small batch paleo 8-bit. Intelligentsia umami wayfarers pickled, asymmetrical kombucha letterpress kitsch leggings cold-pressed squid chartreuse put a bird on it. Listicle pickled man bun cornhole heirloom art party.</p>\n          </article>\n        </div>\n      </div>\n      <button className=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExample\" data-bs-slide=\"prev\">\n        <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n        <span className=\"visually-hidden\">Previous</span>\n      </button>\n      <button className=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExample\" data-bs-slide=\"next\">\n        <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n        <span className=\"visually-hidden\">Next</span>\n      </button>\n    </div>\n  );  \n}\n\n\nfunction GetGeneral(props) {\n    const [rowData, setRowData] = useState(null);\n    //const [obj, setObj] = useState(null);\n    console.log(\"props.matchedroute :\", props.matchedroute)\n    console.log(\"props.routeid :\", props.routeid);\n\n    //setObj(\"Alexander\"); // this caused rerender infinitely\n\n    /*\n    const memoizedCallback = useCallback(\n      () => {\n        doSomething(props.custname);\n      },\n      [props.custname],\n    );\n    memoizedCallback();\n    */\n\n    /*\n    useEffect(() => {\n        console.log(\"running useEffect\");      \n        function doSomething() {\n           const msg = \"Here in useEffect, you are calling me because of \" + props.custname\n           console.log(msg)\n           alert(msg);\n        }\n\n        doSomething();\n     }, [props.custname]);\n     */\n\n    useEffect(() => {\n        let url = window.homepathname.replace(\"dashboard\", \"\");\n        let method = \"GET\";\n        if (props.routeid == \"obat\") {\n          url += \"api/tokens/create\";\n          method = \"POST\";\n        } else {\n          url += props.routeid;\n          method = \"POST\";\n        }\n        //url += props.matchedroute.url;\n        console.log(\"matchedroute :\", props.matchedroute, \" url :\", url);\n\n        const myHeaders = new Headers();\n        //myHeaders.append('Accept', 'application/json');\n        myHeaders.append('Content-Type', 'application/json');\n\n        const myInit = {\n          method: method,\n          headers: myHeaders,\n          //mode: 'cors',\n          //cache: 'default',\n        };\n        //if (props.routeid == \"obat\") {\n            myInit.body = JSON.stringify({token_name: \"Alexander\"});\n        //}\n        console.log(\"init :\", myInit)\n\n        fetch(url, myInit)\n          .then(result => result.json())\n          .then(data => {\n              console.log(\"data :\", data);\n              setRowData(data);\n        })\n        .catch(error => console.log(\"Error : \" + error))\n    });\n\n    return (\n        <>\n            <div className=\"row\">\n                <label className=\"col-sm-2 mt-2 mb-2 ml-2\">For Client HTTP purpose only</label>\n                <label className=\"col-sm-2 mt-2 mb-2 ml-2\">Data : {rowData}</label>\n            </div>\n        </>\n    );\n};\nfunction Logout(props) {\n    sendDataForLogout();\n}\n\nfunction sendDataForLogout(e) {\n    const info = \"in sendDataForLogout, window.homepathname : \" + window.homepathname\n    console.log(info);\n    //alert(info);\n    const csrftoken = document.querySelector('meta[name=\"csrf-token\"]').content\n    //console.log(\"csrf-token : \", csrftoken)    \n    \n    const url = window.homepathname.replace(\"dashboard\", \"logout\");\n    fetch(url, {\n        method: 'POST',\n        headers:{\n            //Not setting Content-Type at all works as expected. Halleluyah !\n            //'Content-Type': ['multipart/form-data', 'boundary=boundary']\n            //'Content-Type': 'multipart/form-data'\n            //'Content-Type': 'application/x-www-form-urlencoded'\n            //'Origin':'http://localhost'\n            'X-CSRF-TOKEN': csrftoken\n        },\n        //mode: \"cors\",\n        //cache: \"no-cache\",\n        //credentials: \"include\"\n        //body: formdata\n    })\n    //.then(result => result.json())\n    .then(result => result.text())\n    .then(data => {\n        if (data != 0) {\n            const msg =\"Logout tidak berhasil\"\n        } else {\n        }\n        console.log(data)\n        //location.assign(window.homepathname.replace(\"dashboard\", \"login\"));\n    })\n    .catch(error => {\n        console.log(error)\n    })\n}\n\nfunction UnderConstruction() {\n    return <label>This feature is under construction</label>\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\nimport customerReducer from '../features/customer/customerSlice';\n\nexport default configureStore({\n  reducer: {\n    counter: counterReducer,\n    customer: customerReducer\n  },\n});\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n//import AppRouter from './AppRouter';\r\nimport App from './js/components/App';\r\nimport store from './js/components/app/store';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport reportWebVitals from './reportWebVitals';\r\n//import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  /*\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  */\r\n\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,  \r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}